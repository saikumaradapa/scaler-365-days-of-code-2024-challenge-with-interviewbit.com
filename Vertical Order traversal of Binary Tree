from collections import deque, defaultdict
class Solution:
	def verticalOrderTraversal(self, root):
        if not root: return []
        hasMap = defaultdict(list)
        q = deque([(root, 0, 0)])    
        minIdx, maxIdx = 0,0
        
        while q:
            n = len(q)
            for _ in range(n):
                node, r, c = q.popleft()
                hasMap[c].append(node.val)
                
                minIdx = min(minIdx, c)
                maxIdx = max(maxIdx, c)
                
                if node.left:
                    q.append((node.left, r+1, c-1))

                if node.right:
                    q.append((node.right, r+1, c+1))

                    
        res = []
        for i in range(minIdx, maxIdx+1):
            res.append(hasMap[i])
        return res
        
''' time complexity : O(n)                
    space complexity : O(n)
'''
