class Solution:
    def buildTree(self, left, right, nums):
        if left > right: return None 
        
        mid = (left + right) // 2
        root = TreeNode(nums[mid])
        root.left = self.buildTree(left, mid-1, nums)
        root.right = self.buildTree(mid+1, right, nums)
        return root 
        
    def sortedArrayToBST(self, nums):
        return self.buildTree(0, len(nums)-1, nums)  

''' time complexity : O(n)
    space complexity : O(logn) - height balanced tree
'''
