from collections import deque 
class Solution:
    def solve(self, A, B):
        if not A or A.val == B: return []
        
        q = deque([A])
        while q :
            n = len(q)
            level = []
            flag = False 
            for i in range(n) :
                node = q.popleft()
                                
                if node.left and node.left.val == B or node.right and node.right.val == B :
                    flag = True 
                    continue 
                
                if node.left :
                    q.append(node.left)
                    level.append(node.left.val)
                if node.right :
                    q.append(node.right)
                    level.append(node.right.val)
                    
            if flag :
                return level 
        return []
            
''' time complexity : O(n)                            
    space complexity : O(n)
'''
