class Solution:
    def solve(self, A):
        if len(A) != len(set(A)) : return 0 
        
        stack = []
        minV = float("-inf")
        for val in A :
            if val < minV : return 0 
                        
            while stack and stack[-1] < val :
                minV = stack.pop()
            stack.append(val)
        return 1                

''' time complexity : O(n)  
    space complexity : O(n)
'''


################################################################################################################################################################

class Solution:
    def solve(self, A):
        
        n = len(A)
        for i in range(n) :
            for j in range(i+1, n) :
                if A[j] > A[i] :
                    for k in range(j+1, n) :
                        if A[k] < A[i] :
                            return 0
                    break 
                elif A[i] == A[j] : 
                    return 0
        return 1
        
        
''' time complexity : O(n^2)        
    space complexity : O(1)
'''
